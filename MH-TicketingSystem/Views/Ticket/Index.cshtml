@model IEnumerable<MH_TicketingSystem.Models.TicketPriorityLevelViewModel>
@{
    ViewData["Title"] = "Tickets";
    var ticketType = Context.Request.Query["ticketType"];
}

<div class="page-inner">
    <div class="page-header">
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a asp-controller="Dashboard" asp-action="Index">
                    <i class="icon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="icon-arrow-right"></i>
            </li>
            <li class="nav-item">
                <a asp-controller="Ticket" asp-action="Index">Tickets</a>
            </li>
        </ul>
        @*  <div class="ms-md-auto pt-2 py-md-0">
            <a href="#" class="btn btn-primary btn-round">Add Ticket</a>
        </div> *@
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-head-row">

                        <div class="card-title">Support Tickets</div>
                        <div class="card-tools">
                            <ul class="nav nav-pills nav-secondary nav-pills-no-bd nav-sm">
                                <li class="nav-item">
                                    <a asp-controller="Ticket" asp-action="Index"
                                       asp-route-ticketType="all"
                                       class="nav-link @((ticketType == "all" || string.IsNullOrEmpty(ticketType)) ? "active" : "")"
                                       aria-selected="true">All</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-controller="Ticket" asp-action="Index"
                                       asp-route-ticketType="open"
                                       class="nav-link @((ticketType == "open") ? "active" : "")"
                                       aria-selected="false">Open</a>
                                </li>
                                <li class="nav-item">
                                    <a asp-controller="Ticket" asp-action="Index"
                                       asp-route-ticketType="closed"
                                       class="nav-link @((ticketType == "closed") ? "active" : "")"
                                       aria-selected="false">Closed</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body" id="tickets">
                    @foreach (var ticket in Model)
                    {
                        string truncatedDescription = ticket.Description.Length > 50
                        ? ticket.Description.Substring(0, 50) + "..."
                        : ticket.Description;
                        string formattedDate = ticket.DateTicket.ToString("MMM dd, yyyy h:mm tt");
                        <div id="ticketContainer">
                            <div class="d-flex justify-content-between">
                                <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.TicketId">
                                    <div class="flex-1 ms-3 pt-1">
                                        <h6 class="text-uppercase fw-bold mb-1">
                                            <span style="color: #007bff; text-decoration: none; font-weight: bold;">
                                                @ticket.Subject.ToUpper()
                                            </span>
                                            <span class="text-@ticket.PriorityLevelColor ps-3">@ticket.TicketStatusString</span>
                                        </h6>
                                        <span class="text-muted">
                                            @truncatedDescription
                                        </span>
                                        <br />
                                        <small class="text-muted mr-2">
                                            <i class="fa fa-calendar"></i> @ticket.DateTicket.ToString("dd MMM yyyy")
                                        </small>
                                        <small class="text-muted">
                                            <i class="fa fa-comments"></i> 1 replies
                                        </small>
                                        <small class="text-muted mr-2">
                                            <i class="icon-calendar"></i> SLA Deadline @ticket.SLADeadline.ToString("dd MMM yyyy")
                                        </small>
                                    </div>
                                </a>
                                <div class="float-end pt-1">
                                    <small class="text-muted me-1 d-inline-block">#@ticket.TicketNumber</small>
                                    <div class="dropdown d-inline-block">
                                        <div class="dropdown">
                                            <button class="btn btn-icon btn-clean"
                                                    type="button"
                                                    onclick="document.getElementById('menu-@ticket.TicketId').classList.toggle('show')">
                                                <i class="fas fa-ellipsis-h"></i>
                                            </button>
                                            <div id="menu-@ticket.TicketId" class="dropdown-menu">
                                                <a class="dropdown-item" href="@Url.Action("CloseTicket", "Ticket", new { id = ticket.TicketId })">Close</a>
                                                <a class="dropdown-item" href="@Url.Action("ReOpenTicket", "Ticket", new { id = ticket.TicketId })">Re-Open</a>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="separator-dashed"></div>
                        </div>
                    }
                </div>
                <div class="p-3">
                    <nav aria-label="Ticket page navigation" style="display: @(Model.Count() <= 0? "none" : "block");">
                        <ul class="pagination">
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">«</span>
                                    <span class="sr-only">Previous</span>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">»</span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>  <!--card-->
        </div>
    </div>
</div>

<!--   Core JS Files   -->
<script src="~/js/core/jquery-3.7.1.min.js"></script>
<script src="~/js/core/popper.min.js"></script>
<script src="~/vendor/toastr/js/toastr.min.js"></script>
<script src="~/js/dist/browser/signalr.js"></script>
<script src="~/js/dist/browser/signalr.min.js"></script>
<script src="~/js/ticket_pagination.js"></script>
<script>
    $(function () {
    @if (ViewBag.SuccessMessage != null)
    {
        <text>
                   toastr.success('@ViewBag.SuccessMessage');
        </text>
    }
    else if (ViewBag.ErrorMessage != null)
    {
        <text>
                   toastr.error('@ViewBag.ErrorMessage');
        </text>
    }
        });
</script>

<script>
    const connection = new signalR.HubConnectionBuilder()
    .withUrl("/dashboardHub")
    .build();

    connection.on("ReceiveNewTicket", (ticket, ticketStatus, priorityLevelColor) => {

        const truncatedDescription = ticket.description.length > 50
            ? ticket.description.substring(0, 50) + "..."
            : ticket.description;
        const formattedDate = new Date(ticket.dateTicket).toLocaleString("en-US", {
            month: "short",
            day: "numeric",
            year: "numeric",
            hour: "numeric",
            minute: "numeric",
        });

        const ticketHtml = `
            <div id="ticketContainer">
                <div class="d-flex justify-content-between">
                    <a href="/Ticket/Details/${ticket.id}">
                        <div class="flex-1 ms-3 pt-1">
                            <h6 class="text-uppercase fw-bold mb-1">
                                <span style="color: #007bff; text-decoration: none; font-weight: bold;">
                                    ${ticket.subject.toUpperCase()}
                                </span>
                                <span class="text-${priorityLevelColor} ps-3">${ticketStatus}</span>
                            </h6>
                            <span class="text-muted">
                                ${truncatedDescription}
                            </span>
                            <br />
                            <small class="text-muted mr-2">
                                <i class="fa fa-calendar"></i> ${formattedDate}
                            </small>
                            <small class="text-muted">
                                <i class="fa fa-comments"></i> 1 replies
                            </small>
                            <small class="text-muted mr-2">
                                <i class="icon-calendar"></i> SLA Deadline ${new Date(ticket.slaDeadline).toLocaleDateString("en-US", {
                                    month: "short",
                                    day: "numeric",
                                    year: "numeric",
                                })}
                            </small>
                        </div>
                    </a>
                    <div class="float-end pt-1">
                        <small class="text-muted me-1 d-inline-block">#${ticket.ticketNumber}</small>
                        <div class="dropdown d-inline-block">
                            <button class="btn btn-icon btn-clean"
                                    type="button"
                                    onclick="document.getElementById('menu-${ticket.id}').classList.toggle('show')">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <div id="menu-${ticket.id}" class="dropdown-menu">
                                <a class="dropdown-item" href="/Ticket/CloseTicket/${ticket.id}">Close</a>
                                <a class="dropdown-item" href="/Ticket/ReOpenTicket/${ticket.id}">Re-Open</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="separator-dashed"></div>
            </div>
        `;


        const container = document.getElementById("tickets");
        container.insertAdjacentHTML("afterbegin", ticketHtml);
      });

    connection.start().catch(err => console.error(err));

</script>