@model MH_TicketingSystem.Models.TicketFilterViewModel
@{
    ViewData["Title"] = "Tickets";
    var ticketType = Context.Request.Query["ticketType"];
}

<div class="page-inner">
    <div class="page-header">
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a asp-controller="Dashboard" asp-action="Index">
                    <i class="icon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="icon-arrow-right"></i>
            </li>
            <li class="nav-item">
                <a asp-controller="Ticket" asp-action="Index">Tickets</a>
            </li>
        </ul>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card p-2">
                <form asp-controller="Ticket" asp-action="Filter" model-only="Model.Filter">
                    <div class="row g-2">
                        <div class="col-md-6 col-lg-3">
                            <div class="form-group mb-0">
                                <label for="select1" class="form-label">Department</label>
                                <select class="form-control" asp-for="Filter.DepartmentId" asp-items="@(new SelectList(Model.Departments, "Value", "Text"))">
                                    <option value="-1" selected>Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-3">
                            <div class="form-group mb-0">
                                <label asp-for="Filter.TicketStatus" class="form-label">Ticket Status</label>
                                <select asp-for="Filter.TicketStatus" class="form-control" id="select1">
                                    <option value="-1" selected>Select</option>
                                    <option value="0">Open</option>
                                    <option value="1">Pending</option>
                                    <option value="2">Closed</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-3">
                            <div class="form-group mb-0">
                                <label asp-for="Filter.StartDate" class="form-label">Start Date</label>
                                <input asp-for="Filter.StartDate" type="date" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-3">
                            <div class="form-group mb-0">
                                <label asp-for="Filter.EndDate" class="form-label">End Date</label>
                                <input asp-for="Filter.EndDate" type="date" class="form-control" />
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group mb-0">
                                <button type="submit" class="btn btn-primary mt-3 w-100 w-md-auto">Filter</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-head-row">
                        <div class="card-title">Support Tickets</div>
                    </div>
                </div>
                <div class="card-body" id="tickets">
                    @if (Model.Tickets != null)
                    {
                        foreach (var ticket in Model.Tickets)
                        {
                            string truncatedDescription = ticket.Description.Length > 50
                            ? ticket.Description.Substring(0, 50) + "..."
                            : ticket.Description;
                            string formattedDate = ticket.DateTicket.ToString("MMM dd, yyyy h:mm tt");
                            string pLevelColor = (ticket.TicketStatus == (int)TicketStatus.Closed) ? "success" : ticket.PriorityLevelColor;
                            <div id="ticketContainer">
                                <div class="d-flex justify-content-between">
                                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.TicketId">
                                        <div class="flex-1 ms-3 pt-1">
                                            <h6 class="text-uppercase fw-bold mb-1">
                                                <span style="color: #007bff; text-decoration: none; font-weight: bold;">
                                                    @ticket.Subject.ToUpper()
                                                </span>
                                                <span class="text-@pLevelColor ps-3">@ticket.TicketStatusString</span>
                                            </h6>
                                            <span class="text-muted">
                                                @truncatedDescription
                                            </span>
                                            <br />
                                            <small class="text-muted mr-2">
                                                <i class="fa fa-calendar"></i> @ticket.DateTicket.ToString("dd MMM yyyy")
                                            </small>
                                            <small class="text-muted">
                                                <i class="fa fa-comments"></i> 1 replies
                                            </small>
                                            <small class="text-muted mr-2">
                                                <i class="icon-calendar"></i> SLA Deadline @(((DateTime)ticket.SLADeadline).ToString("dd MMM yyyy"))
                                            </small>
                                        </div>
                                    </a>
                                    <div class="float-end pt-1">
                                        <small class="text-muted me-1 d-inline-block">#@ticket.TicketNumber</small>
                                        <div class="dropdown d-inline-block">
                                            <div class="dropdown">
                                                <button class="btn btn-icon btn-clean"
                                                        type="button"
                                                        onclick="document.getElementById('menu-@ticket.TicketId').classList.toggle('show')">
                                                    <i class="fas fa-ellipsis-h"></i>
                                                </button>
                                                <div id="menu-@ticket.TicketId" class="dropdown-menu">
                                                    <a class="dropdown-item" href="@Url.Action("CloseTicket", "Ticket", new { id = ticket.TicketId })">Close</a>
                                                    <a class="dropdown-item" href="@Url.Action("PendingTicket", "Ticket", new { id = ticket.TicketId })">Pending</a>
                                                    <a class="dropdown-item" href="@Url.Action("ReOpenTicket", "Ticket", new { id = ticket.TicketId })">Re-Open</a>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="separator-dashed"></div>
                            </div>
                        }
                    }
                </div>
                <div class="p-3">
                    <nav aria-label="Ticket page navigation" style="display: @(Model.Tickets.Count() <= 0? "none" : "block");">
                        <ul class="pagination">
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">«</span>
                                    <span class="sr-only">Previous</span>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">»</span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>  <!--card-->
        </div>
    </div>
</div>

<!--   Core JS Files   -->
<script src="~/js/core/jquery-3.7.1.min.js"></script>
<script src="~/js/core/popper.min.js"></script>
<script src="~/vendor/toastr/js/toastr.min.js"></script>
<script src="~/js/dist/browser/signalr.js"></script>
<script src="~/js/dist/browser/signalr.min.js"></script>
<script src="~/js/ticket_pagination.js"></script>
<script>
    $(function () {
    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                     toastr.success('@TempData["SuccessMessage"]');
        </text>
    }
    else if (TempData["ErrorMessage"] != null)
    {
        <text>
                     toastr.error('@TempData["ErrorMessage"]');
        </text>
    }
    });

</script>

<script>
    const connection = new signalR.HubConnectionBuilder()
    .withUrl("/dashboardHub")
    .build();

    connection.on("ReceiveNewTicket", (ticket, ticketStatus, priorityLevelColor) => {

        const truncatedDescription = ticket.description.length > 50
            ? ticket.description.substring(0, 50) + "..."
            : ticket.description;
        const formattedDate = new Date(ticket.dateTicket).toLocaleString("en-US", {
            month: "short",
            day: "numeric",
            year: "numeric",
            hour: "numeric",
            minute: "numeric",
        });

        const ticketHtml = `
            <div id="ticketContainer">
                <div class="d-flex justify-content-between">
                    <a href="/Ticket/Details/${ticket.id}">
                        <div class="flex-1 ms-3 pt-1">
                            <h6 class="text-uppercase fw-bold mb-1">
                                <span style="color: #007bff; text-decoration: none; font-weight: bold;">
                                    ${ticket.subject.toUpperCase()}
                                </span>
                                <span class="text-${priorityLevelColor} ps-3">${ticketStatus}</span>
                            </h6>
                            <span class="text-muted">
                                ${truncatedDescription}
                            </span>
                            <br />
                            <small class="text-muted mr-2">
                                <i class="fa fa-calendar"></i> ${formattedDate}
                            </small>
                            <small class="text-muted">
                                <i class="fa fa-comments"></i> 1 replies
                            </small>
                            <small class="text-muted mr-2">
                                <i class="icon-calendar"></i> SLA Deadline ${new Date(ticket.slaDeadline).toLocaleDateString("en-US", {
                                    month: "short",
                                    day: "numeric",
                                    year: "numeric",
                                })}
                            </small>
                        </div>
                    </a>
                    <div class="float-end pt-1">
                        <small class="text-muted me-1 d-inline-block">#${ticket.ticketNumber}</small>
                        <div class="dropdown d-inline-block">
                            <button class="btn btn-icon btn-clean"
                                    type="button"
                                    onclick="document.getElementById('menu-${ticket.id}').classList.toggle('show')">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <div id="menu-${ticket.id}" class="dropdown-menu">
                                <a class="dropdown-item" href="/Ticket/CloseTicket/${ticket.id}">Close</a>
                                <a class="dropdown-item" href="/Ticket/PendingTicket/${ticket.id}">Pending</a>
                                <a class="dropdown-item" href="/Ticket/ReOpenTicket/${ticket.id}">Re-Open</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="separator-dashed"></div>
            </div>
        `;


        const container = document.getElementById("tickets");
        container.insertAdjacentHTML("afterbegin", ticketHtml);
      });

    connection.start().catch(err => console.error(err));

</script>