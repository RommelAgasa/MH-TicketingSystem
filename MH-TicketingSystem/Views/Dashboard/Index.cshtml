@model IEnumerable<MH_TicketingSystem.Models.TicketViewModel>

@{
    ViewData["Title"] = "Dashboard";
}

<div class="page-inner">

    <div class="row">
        <div class="col-sm-6 col-md-3">
            <div class="card card-stats card-round">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-icon">
                            <div class="icon-big text-center icon-primary bubble-shadow-small">
                                <i class="fas fa-briefcase"></i>
                            </div>
                        </div>
                        <div class="col col-stats ms-3 ms-sm-0">
                            <div class="numbers">
                                <p class="card-category">TOTAL TICKETS</p>
                                <h4 class="card-title" id="totalTickets">@ViewBag.TicketStat.TotalTickets</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card card-stats card-round">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-icon">
                            <div class="icon-big text-center icon-info bubble-shadow-small">
                                <i class="fas fa-hourglass-half"></i>
                            </div>
                        </div>
                        <div class="col col-stats ms-3 ms-sm-0">
                            <div class="numbers">
                                <p class="card-category">PENDING TCIKETS</p>
                                <h4 class="card-title" id="newTickets">@ViewBag.TicketStat.PendingTickets</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card card-stats card-round">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-icon">
                            <div class="icon-big text-center icon-success bubble-shadow-small">
                                <i class="fas fa-lock-open"></i>
                            </div>
                        </div>
                        <div class="col col-stats ms-3 ms-sm-0">
                            <div class="numbers">
                                <p class="card-category">OPEN TICKETS</p>
                                <h4 class="card-title" id="openTickets">@ViewBag.TicketStat.OpenTickets</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="card card-stats card-round">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-icon">
                            <div class="icon-big text-center icon-secondary bubble-shadow-small">
                                <i class="fas fa-lock"></i>
                            </div>
                        </div>
                        <div class="col col-stats ms-3 ms-sm-0">
                            <div class="numbers">
                                <p class="card-category">CLOSED TICKETS</p>
                                <h4 class="card-title" id="closedTickets">@ViewBag.TicketStat.ClosedTickets</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 p-1">
            <div class="card">
                <div class="card-header">
                    <div class="card-head-row">
                        <div class="card-title">Ticket Trajectory</div>
                    </div>
                </div>
                <div class="card-body">
                    <div id="chart-container" style="min-height: 300px;">
                        <canvas id="LineChart"></canvas>
                    </div>
                </div>
            </div> <!--card-->
        </div>
        <div class="col-md-6 p-1">
            <div class="card">
                <div class="card-header">
                    <div class="card-head-row">
                        <div class="card-title">Priority Ticket Distribution</div>
                    </div>
                </div>
                <div class="card-body">
                    <div id="chart-container" style="min-height: 300px;">
                        <canvas id="doughnutChart"></canvas>
                    </div>
                </div>
            </div> <!--card-->
        </div>

    </div>
</div>

<script src="~/js/chart.min.js"></script>
<script>

    document.addEventListener('DOMContentLoaded', function () {
           // Fetch data and render the chart
    fetch('Dashboard/GetTicketsPerMonth')
        .then(response => response.json())
        .then(chartData => {
            var lineChart = document.getElementById('LineChart').getContext('2d');

            new Chart(lineChart, {
                type: 'line',
                data: chartData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 10,
                            fontColor: '#1d7af3',
                        }
                    },
                    tooltips: {
                        bodySpacing: 4,
                        mode: "nearest",
                        intersect: 0,
                        position: "nearest",
                        xPadding: 10,
                        yPadding: 10,
                        caretPadding: 10
                    },
                    layout: {
                        padding: { left: 15, right: 15, top: 15, bottom: 15 }
                    }
                }
            });
        })
        .catch(error => console.error('Error fetching chart data:', error));


        // Fetch data and render the doughnut chart
        fetch('Dashboard/GetTicketsByPriority')
            .then(response => response.json())
            .then(chartData => {
                var doughnutChart = document.getElementById('doughnutChart').getContext('2d');

                new Chart(doughnutChart, {
                    type: 'doughnut',
                    data: chartData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        legend: {
                            position: 'bottom'
                        },
                        layout: {
                            padding: {
                                left: 20,
                                right: 20,
                                top: 20,
                                bottom: 20
                            }
                        }
                    }
                });
            })
        .catch(error => console.error('Error fetching chart data:', error));


    });

</script>
